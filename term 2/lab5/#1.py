import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from pathlib import Path
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    CallbackQueryHandler
)

# cfg
TOKEN = "7612718600:AAFJloW4OOjdWIkvL8vXNZ-0aR-LVJq4FT8"
BASE_DIR = Path(__file__).parent
PHOTO_PATH = BASE_DIR / "images" / "bot_image.jpg"

# 1.1 –≠—Ö–æ-–±–æ—Ç + 1.2 –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    welcome_text = f"""
    üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç.

    üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    /start - –ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
    /help - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
    /photo - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Ñ–æ—Ç–æ
    /menu - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é

    –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç, –∏ —è –µ–≥–æ –ø–æ–≤—Ç–æ—Ä—é!
    """
    await update.message.reply_text(welcome_text)

# 1.1 –≠—Ö–æ-–±–æ—Ç
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(update.message.text)

# 1.3 –ë–æ—Ç-–∫–æ–º–∞–Ω–¥—ã
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = """
    üÜò –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

    /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
    /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
    /photo - –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    /menu - –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é

    ‚Ñπ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç - –±–æ—Ç –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç
    """
    await update.message.reply_text(help_text)

# 1.4 –§–æ—Ç–æ–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å
async def send_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not os.path.exists(PHOTO_PATH):
        await update.message.reply_text("–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return

    caption = "–í–æ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏ üìÅ"
    with open(PHOTO_PATH, 'rb') as photo:
        await update.message.reply_photo(photo, caption=caption)

# 1.5 –ë–æ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def show_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("–ö–æ–º–∞–Ω–¥–∞ 1", callback_data="1"),
            InlineKeyboardButton("–ö–æ–º–∞–Ω–¥–∞ 2", callback_data="2")
        ],
        [
            InlineKeyboardButton("–û –±–æ—Ç–µ", callback_data="about"),
            InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="close")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "1":
        await query.edit_message_text("–í—ã–±—Ä–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ 1 ‚úÖ")
    elif query.data == "2":
        await query.edit_message_text("–í—ã–±—Ä–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ 2 ‚úÖ")
    elif query.data == "about":
        await query.edit_message_text("–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏")
    elif query.data == "close":
        await query.delete_message()

def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))  # 1.1 + 1.2
    application.add_handler(CommandHandler("help", help_command))  # 1.3
    application.add_handler(CommandHandler("photo", send_photo))  # 1.4
    application.add_handler(CommandHandler("menu", show_menu))  # 1.5
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (1.1)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫ (1.5)
    application.add_handler(CallbackQueryHandler(button_handler))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()